[force_move]
enable_force_move: True
#####################################################################
## 	                INCLUDES
#####################################################################
[include fluidd.cfg]
[include KAMP_Settings.cfg]
[include mainsail.cfg]
[include timelapse.cfg]
[include Exclude_Object.cfg]
#[include Start_Stop.cfg]
[include Macro.cfg]
[include Speed.cfg]
#[include motor_sync.cfg]
#####################################################################
## 	                GENERAL SETTINGS
#####################################################################
[exclude_object]

[idle_timeout]
timeout: 1800
gcode =
  {% if printer.pause_resume.is_paused %}
    M104 S0
  {% else %}
    TURN_OFF_HEATERS
    #M84
  {% endif %}

[gcode_arcs]
resolution: 0.1

[pause_resume]
recover_velocity: 350

[display_status]

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode:
    STATUS_ERROR

[firmware_retraction]
retract_length: 0.5
retract_speed: 60
unretract_extra_length: 0.00
unretract_speed: 60
#####################################################################
## 	                 Motherboard configuration
#####################################################################
[mcu]
serial:/tmp/klipper_host_mcu
[mcu]
serial:/dev/serial/by-id/usb-Klipper_stm32h723xx_120008001451313338343730-if00
### How to query the USB firmware ID：ls -l /dev/serial/by-id/
#[mcu adxl]
#serial : /dev/serial/by-id/usb-Anchor_Ampon-if00

#####################################################################
##                  Model and acceleration
#####################################################################
[printer]
kinematics: corexy            # Printer type：corexy
max_velocity: 1000            # Maximum speed (max. 300)
max_accel: 70000              # Maximum acceleration (max. 4000)
minimum_cruise_ratio: 0.0
#max_accel_to_decel:55000      # Maximum acceleration to deceleration (max. 4000)
max_z_velocity: 15            # Z-axis maximum speed
max_z_accel: 350              # Z-axis maximum acceleration
square_corner_velocity: 15    # Square corner speed

#####################################################################
## 	                ADXL & Input Shaping
#####################################################################
#[adxl345]
#cs_pin: adxl:CS
#[resonance_tester]
#accel_chip: adxl345
#probe_points: 165, 165, 100

[resonance_tester]
accel_chip: beacon
probe_points: 165, 165, 100
accel_per_hz:150

[input_shaper]
shaper_freq_x: 121.8 # center frequency for the X axis filter
shaper_type_x: mzv # filter type for the X axis
shaper_freq_y: 83.6 # center frequency for the Y axis filter
shaper_type_y: mzv # filter type for the Y axis
damping_ratio_x: 0.034 # damping ratio for the X axis
damping_ratio_y: 0.082 # damping ratio for the Y axis

[shaketune]
result_folder: ~/printer_data/config/ShakeTune_results             #    The folder where the results will be stored. It will be created if it doesn't exist.
number_of_results_to_keep: 3                                       #    The number of results to keep in the result_folder. The oldest results will be automatically deleted after each runs.
keep_raw_csv: False                                                #    If True, the raw CSV files will be kept in the result_folder alongside the PNG graphs. If False, they will be deleted and only the graphs will be kept.
show_macros_in_webui: True                                         #    Mainsail and Fluidd doesn't create buttons for "system" macros that are not in the  printer.cfg file. If you want to see the macros in the webui, set this to True.
timeout: 600                                                       #    The maximum time in seconds to let Shake&Tune process the CSV files and generate the graphs.


[motors_sync]
axes: x,y
#    Axes on which calibration will be performed.
accel_chip_x:beacon
accel_chip_y:beacon
model: linear
microsteps: 16 #    Maximum microstepping of stepper motor rotor displacement, not worth #    increase the value above 16, do so at your own peril and risk.
model_coeffs: 20000, 0 #    Coefficients above the described model, for calculating microsteps.
max_step_size: 5  #    The maximum number of microsteps that the motor can take move at time,  #    to achieve the planned magnitude.
retry_tolerance: 999999 #    Forced threshold to which a pair of stepper motors should will omit ,#    deviations. After several runs calibration, you will find the limit ,#    to which you can lower this parameter.
retries: 0 #    Maximum number of repetitions to achieve forced motor synchronization,#    deviation threshold.


#####################################################################
## 	                     Beacon
#####################################################################
[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_973785085154354D38202020FF0A122F-if00
x_offset: 0 # update with offset from nozzle on your machine
y_offset: 51 #27.065 # update with offset from nozzle on your machine
#mesh_main_direction: x
#mesh_runs: 2

#--------------------------------------------------------------------

[safe_z_home]
home_xy_position: 165,165
z_hop: 20

#--------------------------------------------------------------------
[bed_mesh]
algorithm:bicubic
speed:100
mesh_min:40,51
mesh_max:260,245
probe_count:15,15

#--------------------------------------------------------------------
[z_tilt]
z_positions:
  -55, 17
  165, 397
  326, 17
  
points:
  30,30
  165, 220
  300,30
		
horizontal_move_z: 20
speed:200
retries: 10
retry_tolerance: 0.01

#####################################################################
##                  Heater_bed
#####################################################################
[heater_bed]
heater_pin: PE5
sensor_type:  ATC Semitec 104GT-2 #Generic 3950
sensor_pin: PC1
control: pid                 ##heater_bed Temperature PID Calibration Command:  "PID_CALIBRATE HEATER=heater_bed TARGET=100"
pid_Kp:50.702
pid_Ki:1.408
pid_Kd:456.321
min_temp: 0
max_temp: 120
max_power: 1.0
#####################################################################
##	                Temperature Monitoring
#####################################################################
[temperature_sensor Super8 Pro]        
sensor_type: temperature_mcu

[temperature_sensor π4-8gb]
sensor_type: temperature_host

[temperature_sensor Chambers]
sensor_type: EPCOS 100K B57560G104F
sensor_pin:PF5

[temperature_sensor Motors]  optional for chamber temp
sensor_type: EPCOS 100K B57560G104F
#pullup_resistor: 4700
sensor_pin: PF9
min_temp: 0
max_temp: 99
gcode_id: C: C


#####################################################################
#                   FAN
#####################################################################
#[include CoreConfig/bedfans.cfg]
[fan]
#	Print Cooling Fan - PF8 CPAP
pin: PA15
max_power: 0.8
cycle_time: 0.005
hardware_pwm: false
shutdown_speed: 0
kick_start_time: 0.100 
off_below: 0.1

[heater_fan hotend_fan]
##	Hotend Fan - FAN0 Connector
## in case of a watercooler that is 24V use a Heater Pin like PF7 Heat3 for a larger mosfet that can handle more amps.
pin: PA0
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0

[heater_fan Motors]      # hotend_fan
pin: PA2
max_power: 1.0
kick_start_time: 0.5
#heater: Motors             # Associated device: Extruder
#heater_temp: 50
#fan_speed: 1.0

[heater_fan Motors2]      
pin: PA3
max_power: 1.0
kick_start_time: 0.5


[fan_generic RSCS]
#  RSCS Fans - In FAN1 Positon
pin: PA1
max_power: 1
shutdown_speed: 0
kick_start_time: 0.1
off_below: 0.10

#[controller_fan driver_fan] 
# This is if you connect your driver fan to Super8 
#or if you want to add fan to the Super8. Other wise connect them in the driver fan ports
#stepper: stepper_x
#pin: PD14
#max_power: 1
#shutdown_speed: 0
#kick_start_time: 0.1
#off_below: 0.10

[board_pins]
aliases:
    EXP1_1=PE12, EXP1_3=PB2,  EXP1_5=PC14,   EXP1_7=PG14,  EXP1_9=<GND>,
    EXP1_2=PE13, EXP1_4=PG8,  EXP1_6=PC13,   EXP1_8=PG13,  EXP1_10=<5V>,
    # EXP2 header
    EXP2_1=PA6, EXP2_3=PB7,  EXP2_5=PB6,  EXP2_7=PG15,   EXP2_9=<GND>,
    EXP2_2=PA5, EXP2_4=PA4,  EXP2_6=PA7,  EXP2_8=<RST>,  EXP2_10=<NC>,

#####################################################################
##                  WHITE LED 
#####################################################################

[output_pin X1LED]
pin: PD14
pwm: true
cycle_time: 0.100
value: 1
shutdown_value:0
##gcode command: SET_PIN PIN=LED value=0 to 1





#####################################################################
##                  Axes and Steppers
#####################################################################

#####################################################################
#   B(X) ---------A(Y)
#   |                |
#   |--------E-------|
#   |                |
#   |                |
#  C(Y1)-(Display)-D(X1)               
#####################################################################
##                   X & Y -axis Configuration
#####################################################################

##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########
##########                             Motor 3         X                      #########
##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########

[stepper_y]
step_pin: PE14
dir_pin: PE8
enable_pin: !PE9
microsteps: 16                   # Motor microsteps Setting
rotation_distance: 40            # Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32), adjusted for PLA with CaliFlower
full_steps_per_rotation:200      # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)
endstop_pin: ^PG9                 # Limit switch PIN pin setting（X-）
position_min: 0                  # X-axis minimum travel - software limit
position_endstop:0               # Mechanical reset point coordinates for X-axis (change to 350 for 350 models)
position_max: 310                # X-axis maximum travel - software limit (change to 350 for 350 models)
homing_speed: 35                 # Reset speed maximum 100
homing_retract_dist: 0          # Setback distance after the first trigger of the reset switch
#homing_positive_dir: True       # Direction of reset (generally no change required)
#--------------------------------------------------------------------

[tmc5160 stepper_y]               # BTT TM5160T Plus
cs_pin: PE7
spi_software_mosi_pin: PB5
spi_software_miso_pin: PB4
spi_software_sclk_pin: PB3
run_current: 2.6
stealthchop_threshold: 999999
sense_resistor: 0.022

##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########
##########                             Motor 4           X1                   #########
##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########

[stepper_y1]
step_pin: PE15
dir_pin: !PE11
enable_pin: !PF2
microsteps: 32                 # Motor microsteps Setting
rotation_distance: 40        # Active pulley circumference mm (2GT-20T pulley 40, 2GT-16T pulley 32), adjusted for PLA with CaliFlower
full_steps_per_rotation:200    # Number of pulses required for a single motor revolution (1.8 degree motor: 200, 0.9 degree motor: 400)
#--------------------------------------------------------------------

[tmc5160 stepper_y1]               # BTT TM5160T Plus
cs_pin: PE10
spi_software_mosi_pin: PB5
spi_software_miso_pin: PB4
spi_software_sclk_pin: PB3
run_current: 2.6
stealthchop_threshold: 999999
sense_resistor: 0.022

##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########
##########                             Motor 5            Y                   #########
##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########

[stepper_x]
step_pin: PE1
dir_pin: !PF0
enable_pin: !PC15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200  
endstop_pin: ^PD7                #make sure to set the correct pin here.
position_endstop: -0
position_min: 0
position_max: 315
homing_speed: 40  
homing_retract_dist: 0
#--------------------------------------------------------------------

[tmc5160 stepper_x]                # BTT TM5160T Plus
cs_pin: PF1
spi_software_mosi_pin: PB5
spi_software_miso_pin: PB4
spi_software_sclk_pin: PB3
run_current: 2.6
stealthchop_threshold: 999999
sense_resistor: 0.022

##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########
##########                             Motor 6            Y1                  #########
##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########

[stepper_x1]
step_pin: PE0
dir_pin: !PG3
enable_pin: !PG4
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200 
#--------------------------------------------------------------------

[tmc5160 stepper_x1]               # BTT TM5160T Plus
cs_pin: PG2
spi_software_mosi_pin: PB5
spi_software_miso_pin: PB4
spi_software_sclk_pin: PB3
run_current: 2.6
stealthchop_threshold: 999999
sense_resistor: 0.022

##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########
##########                            TRIPLE Z CONFIGURATION                  #########
##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########
#   |----- Z1 -----|
#   |              |
#   |              |
#   |              |
#   Z0----12864---Z2

##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########
##########                             Motor 0            Z0                  #########
##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########
[stepper_z2]
step_pin: PE2
dir_pin: PC5
enable_pin: !PF11
rotation_distance: 8
full_steps_per_rotation: 200
microsteps: 16

#--------------------------------------------------------------------
[tmc2209 stepper_z2]
uart_pin: PC4
interpolate: true                     # Enable 256 microstep interpolation
run_current: 0.8                      # Motor running current (mA)
hold_current:0.8                     # Holding current (mA)
sense_resistor: 0.110
stealthchop_threshold: 0

[autotune_tmc stepper_z]
motor: omc-17hs19-2004s1
##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########
##########                             Motor 1            Z1                  #########
##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########
[stepper_z1]
step_pin: PE3
dir_pin: PF13
enable_pin: !PF14
rotation_distance: 8
full_steps_per_rotation: 200
microsteps: 16

#--------------------------------------------------------------------
[tmc2209 stepper_z1]
uart_pin: PF12
interpolate: true                     # Enable 256 microstep interpolation
run_current: 0.8                      # Motor running current (mA)
hold_current:0.8                     # Holding current (mA)
sense_resistor: 0.110
stealthchop_threshold: 0


[autotune_tmc stepper_z1]
motor: omc-17hs19-2004s1

##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########
##########                             Motor 2            Z2                  #########
##########//////////////////////////#############\\\\\\\\\\\\\\\\\\\\\\\\\\\\\#########

[stepper_z]
step_pin: PE4
dir_pin: PG0
enable_pin: !PG1
rotation_distance: 8
full_steps_per_rotation: 200
microsteps: 16
endstop_pin: probe:z_virtual_endstop
homing_positive_dir:false
position_min: -15
position_max: 320
homing_speed: 15
second_homing_speed: 2
homing_retract_dist: 0
#--------------------------------------------------------------------
[tmc2209 stepper_z]
uart_pin: PF15
interpolate: true                     # Enable 256 microstep interpolation
run_current: 0.8                      # Motor running current (mA)
hold_current:0.8                     # Holding current (mA)
sense_resistor: 0.110
stealthchop_threshold: 0

[autotune_tmc stepper_z2]
motor: omc-17hs19-2004s1


#####################################################################
##                  Extruder motor  MOTOR 7
#####################################################################
[extruder]
### Vz-HextrudORT
step_pin: PE6
dir_pin: PG6
enable_pin: !PG7
microsteps: 16
#VZHextrudort LDO 20mm
rotation_distance: 35.8
Gear_ratio: 60:10
nozzle_diameter: 0.5
filament_diameter: 1.750
heater_pin: PB0
sensor_type: PT1000
sensor_pin: PF4
control: pid  ##Calibration command："PID_CALIBRATE HEATER=extruder TARGET=245"
pid_Kp: 23.207 
pid_Ki: 2.309 
pid_Kd: 58.308
min_temp: 0
max_temp: 400
full_steps_per_rotation: 200
max_extrude_only_distance: 1000.0
max_extrude_cross_section: 500
max_extrude_only_velocity: 200
max_extrude_only_accel: 10000
min_extrude_temp: 190
## PA Calibration Values
pressure_advance: 0.02                 # Propulsion pressure - try to keep pressure below 1.0
pressure_advance_smooth_time: 0.03     # Smooth advance time - default value is 0.040

[tmc2209 extruder]
uart_pin: PG5
interpolate: false
run_current: 0.7
sense_resistor: 0.110

[autotune_tmc extruder]
motor: ldo-36sth20-1004ahg

[autotune_tmc stepper_x]
motor: ldo-42sth48-2804ah
[autotune_tmc stepper_x1]
motor: ldo-42sth48-2804ah
[autotune_tmc stepper_y]
motor: ldo-42sth48-2804ah
[autotune_tmc stepper_y1]
motor: ldo-42sth48-2804ah

#####################################################################
#	                GCODE MACROS 
#####################################################################


#--------------------------------------------------------------------
#                    Print_start macro
#--------------------------------------------------------------------

[gcode_macro PRINT_START]
gcode:
  # This part fetches data from your slicer. Such as bed temp, extruder temp, chamber temp and size of your printer.
  {% set target_bed = params.BED|int %}
  {% set target_extruder = params.EXTRUDER|int %}
  {% set target_chamber = params.CHAMBER|default("40")|int %}
  {% set x_wait = printer.toolhead.axis_maximum.x|float / 2 %}
  {% set y_wait = printer.toolhead.axis_maximum.y|float / 2 %}

  # Homes the printer, sets absolute positioning and updates the Stealthburner leds.
  STATUS_HOMING         # Sets SB-leds to homing-mode
  G28                   # Full home (XYZ)
  G90                   # Absolut position

  ##  Uncomment for bed mesh (1 of 2)
  BED_MESH_CLEAR       # Clears old saved bed mesh (if any)

  # Checks if the bed temp is higher than 90c - if so then trigger a heatsoak.
  {% if params.BED|int > 90 %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    M106 S255                                           # Turns on the PT-fan

    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Heatsoak: {target_chamber}c"  # Displays info
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_chamber}   # Waits for chamber to reach desired temp

  # If the bed temp is not over 90c, then it skips the heatsoak and just heats up to set temp with a 5min soak
  {% else %}
    SET_DISPLAY_TEXT MSG="Bed: {target_bed}c"           # Displays info
    STATUS_HEATING                                      # Sets SB-leds to heating-mode
    G1 X{x_wait} Y{y_wait} Z15 F9000                    # Goes to center of the bed
    M190 S{target_bed}                                  # Sets the target temp for the bed
    SET_DISPLAY_TEXT MSG="Soak for 1min"                # Displays info
    G4 P60000                                          # Waits 1 min for the bedtemp to stabilize
  {% endif %}

  # Heating nozzle to 150 degrees. This helps with getting a correct Z-home
  SET_DISPLAY_TEXT MSG="Hotend: 200c"          # Displays info
  M109 S200                                    # Heats the nozzle to 200c

  ##  Uncomment for V2 (Quad gantry level AKA QGL)
  SET_DISPLAY_TEXT MSG="Yatak Hizalanıyor"      # Displays info
  STATUS_LEVELING                 # Sets SB-leds to leveling-mode
  z_tilt               # Levels the buildplate via QGL
  G28 Z                           # Homes Z again after QGL

  ##  Uncomment for bed mesh (2 of 2)
  SET_DISPLAY_TEXT MSG="Bed mesh"    # Displays info
  STATUS_MESHING                     # Sets SB-leds to bed mesh-mode
  bed_mesh_calibrate                 # Starts bed mesh

  # Heats up the nozzle up to target via data from slicer
  SET_DISPLAY_TEXT MSG="Hotend: {target_extruder}c"             # Displays info
  STATUS_HEATING                                                # Sets SB-leds to heating-mode
  G1 X{x_wait} Y{y_wait} Z15 F9000                              # Goes to center of the bed
  M107                                                          # Turns off partcooling fan
  M109 S{target_extruder}                                       # Heats the nozzle to printing temp

  # Gets ready to print by doing a purge line and updating the SB-leds
  SET_DISPLAY_TEXT MSG="Basıyor Zalımın Çocuğu"          # Displays info
  STATUS_PRINTING                                  # Sets SB-leds to printing-mode
  G0 X{x_wait - 50} Y4 F10000                      # Moves to starting point
  G0 Z0.4                                          # Raises Z to 0.4
  G91                                              # Incremental positioning 
  G1 X100 E20 F1000                                # Purge line
  G90                                              # Absolut position

#--------------------------------------------------------------------
#                    Print_END macro
#--------------------------------------------------------------------

[gcode_macro PRINT_END]            # Set PRINT_END as the macro executed at the end of printing, customize the action after printing is completed.
gcode:
    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
    
    #   Check end position to determine safe directions to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}
 
    M400
    G92 E0
    G1 E-10.0 F3600
    G91
    G0 Z{z_safe} F3600
    G0 X{x_safe} Y{y_safe} F20000
    M104 S0
    M140 S0
    M106 S0
    G90
    G0 X{max_x / 2} Y{max_y} F3600
    BED_MESH_CLEAR

#--------------------------------------------------------------------
#                    Print_Cancel macro
#--------------------------------------------------------------------

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

#--------------------------------------------------------------------
#                    Print_Pause macro
#--------------------------------------------------------------------

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
  
#--------------------------------------------------------------------
#                    Print_Resume macro
#--------------------------------------------------------------------

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

#--------------------------------------------------------------------
#                    Purge line
#--------------------------------------------------------------------

  [gcode_macro _PURGE_LINE]
gcode:
    {% if "z" not in printer.toolhead.homed_axes %}
      G28                             ;Only G28 Home if needed
    {% endif %}
    M117 Purging...
    G0 X50 Y0 Z0.2 F9000         ; Move to start position
    G92 E0                        ; Reset Extruder
    G1 E10 F600                   ; Extrude a little
    G1 X108 E20 F1000              ; Draw line
    G92 E0                        ; Reset Extruder
    G91                           ; relative positioning
    G0 Z10 F1000                  ; Raise nozzle
    G90

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [beacon model default]
#*# model_coef = 1.4249409248980307,
#*# 	  1.6731447377771795,
#*# 	  0.7218293420411344,
#*# 	  0.37015868963917575,
#*# 	  0.42229461009746,
#*# 	  0.5213324155436553,
#*# 	  -0.02242933346448031,
#*# 	  -0.5359052375369378,
#*# 	  0.050247336920534375,
#*# 	  0.37486554729999677
#*# model_domain = 1.7607730157050322e-07,1.9244024082828654e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 52.900593
#*# model_offset = 0.00000
